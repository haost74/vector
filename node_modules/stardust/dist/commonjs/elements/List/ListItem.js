'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lib = require('../../lib');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ListItem(props) {
  var active = props.active;
  var children = props.children;
  var className = props.className;
  var disabled = props.disabled;
  var value = props.value;


  var ElementType = (0, _lib.getElementType)(ListItem, props);
  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(ElementType !== 'li', 'item'), className);

  var rest = (0, _lib.getUnhandledProps)(ListItem, props);
  var valueProp = ElementType === 'li' ? { value: value } : { 'data-value': value };

  return _react2.default.createElement(
    ElementType,
    _extends({}, rest, valueProp, { className: classes }),
    children
  );
}

ListItem._meta = {
  name: 'ListItem',
  parent: 'List',
  type: _lib.META.TYPES.ELEMENT
};

ListItem.propTypes = {
  /** An element type to render as (string or function). */
  as: _lib.customPropTypes.as,

  /** A list item can active. */
  active: _react.PropTypes.bool,

  /** Primary content of the ListItem. */
  children: _react.PropTypes.node,

  /** Classes to add to the ListItem className. */
  className: _react.PropTypes.string,

  /** A list item can disabled. */
  disabled: _react.PropTypes.bool,

  /** A value for an ordered list. */
  value: _react.PropTypes.string
};

exports.default = ListItem;